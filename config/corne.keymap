/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        Main {
            label = "Main";
            bindings = <
&kp TAB     &kp Q        &kp W           &kp E           &kp R  &kp T         &kp Y                           &kp U  &kp I           &kp O           &kp P           &kp BACKSPACE
&kp ESCAPE  &mt LCTRL A  &mt LEFT_GUI S  &mt LEFT_ALT D  &kp F  &kp G         &kp H                           &kp J  &mt LEFT_ALT K  &mt LEFT_GUI L  &mt LCTRL SEMI  &kp ENTER
&kp CAPS    &kp Z        &kp X           &kp C           &kp V  &kp B         &kp N                           &kp M  &kp COMMA       &kp DOT         &kp FSLH        &kp DEL
                                         &mo 2           &mo 1  &kp LSHIFT    &mt LS(LA(LC(LEFT_GUI))) SPACE  &mo 1  &mo 3
            >;
        };

        Num_Sym {
            bindings = <
&kp GRAVE         &kp N1                 &kp N2           &kp N3             &kp N4          &kp N5              &kp N6             &kp N7           &kp N8                 &kp N9                         &kp N0                       &kp TILDE
&kp SINGLE_QUOTE  &mt LCTRL EXCLAMATION  &mt LEFT_GUI AT  &mt LEFT_ALT HASH  &kp DOLLAR      &kp PERCENT         &kp CARET          &kp AMPERSAND    &mt LEFT_ALT ASTERISK  &mt LEFT_GUI LEFT_PARENTHESIS  &mt LCTRL RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES
&trans            &kp PIPE               &kp PLUS         &kp UNDER          &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp MINUS              &kp EQUAL                      &kp BACKSLASH                &trans
                                                          &trans             &trans          &trans              &trans             &trans           &trans
            >;

            label = "Num/Sym";
        };

        Nav_Func {
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6    &kp F7         &kp F8       &kp F9     &kp F10  &kp F12
&trans   &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans   &trans
                         &trans  &trans  &trans    &trans    &trans         &trans
            >;

            label = "Nav/Fun";
        };

        Config_Layer {
            bindings = <
&trans  &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2      &bt BT_DISC 3  &bt BT_DISC 4    &trans      &trans        &trans             &trans  &trans  &trans
&trans  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4     &trans      &trans        &trans             &trans  &trans  &trans
&trans  &bt BT_CLR_ALL  &bt BT_PRV     &bt BT_NXT         &bt BT_CLR     &trans           &trans      &trans        &trans             &trans  &trans  &trans
                                       &ext_power EP_TOG  &out OUT_BLE   &sys_reset       &sys_reset  &out OUT_USB  &ext_power EP_TOG
            >;

            label = "Conf";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
