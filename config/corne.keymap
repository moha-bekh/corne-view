/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <160>;
    quick-tap-ms = <160>;
    flavor = "hold-preferred";
    require-prior-idle-ms = <0>;
    retro-tap;
    hold-trigger-key-positions = <>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Conf {
            bindings = <&mo 4>;
            key-positions = <36 41>;
        };

        Qwerty {
            bindings = <&to 1>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            label = "Main";
            bindings = <
&kp TAB                   &kp Q           &kp W           &kp E             &kp R        &kp T             &kp Y      &kp U        &kp I              &kp O            &kp P                    &kp BACKSPACE
&mt LA(LG(LCTRL)) ESCAPE  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F  &kp G             &kp H      &mt RCTRL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON  &mt RA(RG(RCTRL)) RET
&kp LEFT_SHIFT            &kp Z           &kp X           &kp C             &kp V        &kp B             &kp N      &kp M        &kp COMMA          &kp PERIOD       &kp SLASH                &kp RIGHT_SHIFT
                                                          &mo 3             &mo 2        &kp LEFT_SHIFT    &kp SPACE  &mo 2        &mo 3
            >;
        };

        Qwerty {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R  &kp T             &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D      &kp F  &kp G             &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp RET
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B             &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &mo 2  &kp LEFT_SHIFT    &kp SPACE  &mo 2  &to 0
            >;
        };

        Nb-Sym {
            bindings = <
&kp TILDE                        &kp EXCLAMATION        &kp AT                 &kp HASH                 &kp DOLLAR          &kp PERCENT         &kp CARET          &kp AMPERSAND       &kp ASTERISK              &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS   &kp GRAVE
&mt LA(LG(LCTRL)) DOUBLE_QUOTES  &mt LEFT_GUI NUMBER_1  &mt LEFT_ALT NUMBER_2  &mt LEFT_SHIFT NUMBER_3  &mt NUMBER_4 LCTRL  &kp NUMBER_5        &kp NUMBER_6       &mt RCTRL NUMBER_7  &mt RIGHT_SHIFT NUMBER_8  &mt RIGHT_ALT NUMBER_9  &mt RIGHT_GUI NUMBER_0  &mt RA(RG(RCTRL)) SINGLE_QUOTE
&trans                           &kp PIPE               &kp PLUS               &kp UNDER                &kp LEFT_BRACE      &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE     &kp MINUS                 &kp EQUAL               &kp BACKSLASH           &trans
                                                                               &trans                   &trans              &trans              &trans             &trans              &trans
            >;

            label = "Num/Sym";
        };

        Nav-Fn {
            bindings = <
&trans    &kp F1        &kp F2        &kp F3          &kp F4     &kp F5    &kp F6    &kp F7         &kp F8       &kp F9     &kp F10            &kp DELETE
&kp CAPS  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp C_VOLUME_UP    &kp C_PLAY_PAUSE
&trans    &trans        &trans        &trans          &trans     &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp C_VOLUME_DOWN  &kp K_MUTE
                                      &trans          &trans     &trans    &trans    &trans         &trans
            >;

            label = "Nav/Fun";
        };

        Conf {
            bindings = <
&bt BT_CLR  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4        &trans             &trans        &trans  &trans      &trans  &bt BT_CLR_ALL
&trans      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4         &bt BT_PRV         &trans        &trans  &bt BT_NXT  &trans  &trans
&trans      &trans         &trans         &trans         &out OUT_TOG   &ext_power EP_TOG    &ext_power EP_TOG  &out OUT_TOG  &trans  &trans      &trans  &trans
                                          &trans         &trans         &trans               &trans             &trans        &to 0
            >;

            label = "Conf";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
