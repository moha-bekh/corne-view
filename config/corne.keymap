/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        Main {
            label = "Main";
            bindings = <
&kp TAB     &kp Q        &kp W           &kp E                 &kp R    &kp T               &kp Y                 &kp U    &kp I                 &kp O             &kp P            &kp BACKSPACE
&kp ESCAPE  &kp A        &kp S           &kp D                 &kp F    &kp G               &kp H                 &kp J    &kp K                 &kp L             &kp SEMICOLON    &kp ENTER
&kp PIPE    &mt LCTRL Z  &mt LEFT_GUI X  &mt LEFT_ALT C        &lt 2 V  &kp B               &kp N                 &lt 2 M  &mt LEFT_ALT COMMA    &mt LEFT_GUI DOT  &mt LCTRL SLASH  &kp BACKSLASH
                                         &kp LA(LC(LEFT_GUI))  &mo 1    &mt LSHIFT SPACE    &mt LEFT_SHIFT SPACE  &mo 1    &kp LA(LC(LEFT_GUI))
            >;
        };

        Num_Sym {
            bindings = <
&kp TILDE          &kp N1                &kp N2              &kp N3                         &kp N4          &kp N5              &kp N6             &kp N7           &kp N8                          &kp N9                &kp N0                 &kp GRAVE
&kp DOUBLE_QUOTES  &kp EXCLAMATION       &kp AT_SIGN         &kp HASH                       &kp DOLLAR      &kp PERCENT         &kp CARET          &kp AMPERSAND    &kp ASTRK                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE
&trans             &mt LCTRL UNDERSCORE  &mt LEFT_GUI MINUS  &mt LEFT_ALT LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &mt LEFT_ALT RIGHT_PARENTHESIS  &mt LEFT_GUI PLUS     &mt RCTRL EQUAL        &trans
                                                             &trans                         &trans          &trans              &trans             &trans           &trans
            >;

            label = "Num/Sym";
        };

        Nav_Func {
            bindings = <
&trans    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6    &kp F7         &kp F8       &kp F9     &kp F10  &kp DELETE
&kp CAPS  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans   &trans
&trans    &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans   &trans
                          &trans  &mo 3   &trans    &trans    &mo 3          &trans
            >;

            label = "Nav/Fun";
        };

        Config_Layer {
            bindings = <
&trans  &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2      &bt BT_DISC 3  &bt BT_DISC 4    &trans      &trans        &trans             &trans  &trans  &trans
&trans  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4     &trans      &trans        &trans             &trans  &trans  &trans
&trans  &bt BT_CLR_ALL  &bt BT_PRV     &bt BT_NXT         &bt BT_CLR     &trans           &trans      &trans        &trans             &trans  &trans  &trans
                                       &ext_power EP_TOG  &out OUT_BLE   &sys_reset       &sys_reset  &out OUT_USB  &ext_power EP_TOG
            >;

            label = "Conf";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
